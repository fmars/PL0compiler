	.386
	.model flat, stdcall  ; 32 bit memory model
	option casemap :none  ; case sensitive
	include \masm32\include\io32.inc 
.data
	_mstr1 byte "swap",0
	_mstr2 byte "swap",0
	_mstr3 byte "input x: ",0
	_mstr4 byte "input y: ",0
	_mstr5 byte "x mod y = ",0
	_mstr6 byte "choice 1 2 3: ",0
	_mstr7 byte "good ",0
	_mstr8 byte "better ",0
	_mstr9 byte "best ",0
.code

;BEGIN
_swap PROC
	PUSH ebp
	MOV ebp,esp
	MOV [esp+8],ebp
	SUB esp,16
	PUSH ebx
	PUSH esi
	PUSH edi

;BEC fArg1 !t1
	MOV eax,[ebp+8]
	ADD eax,20
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,8
	MOV [edx],eax

;BEC !t1 temp
	MOV eax,[ebp-8]
	MOV edx,[ebp+8]
	SUB edx,4
	MOV [edx],eax

;BEC fArg2 !t2
	MOV eax,[ebp+8]
	ADD eax,20
	ADD eax,[eax]
	SUB eax,4
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,12
	MOV [edx],eax

;BEC !t2 fArg1
	MOV eax,[ebp-12]
	MOV edx,[ebp+8]
	ADD edx,20
	ADD edx,[edx]
	SUB edx,0
	MOV edx,[edx]
	MOV [edx],eax

;BEC temp !t3
	MOV eax,[ebp+8]
	MOV eax,[eax-4]
	MOV edx,ebp
	SUB edx,16
	MOV [edx],eax

;BEC !t3 fArg2
	MOV eax,[ebp-16]
	MOV edx,[ebp+8]
	ADD edx,20
	ADD edx,[edx]
	SUB edx,4
	MOV edx,[edx]
	MOV [edx],eax

;END
	POP edi
	POP esi
	POP ebx
	ADD esp,16
	POP ebp
	RET
_swap ENDP

;BEGIN
_mod PROC
	PUSH ebp
	MOV ebp,esp
	MOV [esp+8],ebp
	SUB esp,48
	PUSH ebx
	PUSH esi
	PUSH edi

;PUSH fArg1
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	PUSH eax

;PUSH fArg2
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,4
	MOV eax,[eax]
	PUSH eax

;PUSH 8
	MOV eax,8
	PUSH eax

;CALL swap
	MOV eax,[ebp+12]
	PUSH eax
	MOV eax,[ebp+8]
	PUSH eax
	SUB esp,4
	CALL _swap
	ADD esp,12
	MOV eax,[esp]
	ADD eax,4
	ADD esp,eax

;WRITE
	WriteString _mstr1

;BEC fArg1 !t1
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,4
	MOV [edx],eax

;WRITE
	MOV edx,ebp
	SUB edx,4
	WriteSDecDword [edx]

;BEC fArg2 !t2
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,4
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,8
	MOV [edx],eax

;WRITE
	MOV edx,ebp
	SUB edx,8
	WriteSDecDword [edx]

;PUSH fArg1
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	PUSH eax

;PUSH fArg2
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,4
	MOV eax,[eax]
	PUSH eax

;PUSH 8
	MOV eax,8
	PUSH eax

;CALL swap
	MOV eax,[ebp+12]
	PUSH eax
	MOV eax,[ebp+8]
	PUSH eax
	SUB esp,4
	CALL _swap
	ADD esp,12
	MOV eax,[esp]
	ADD eax,4
	ADD esp,eax

;WRITE
	WriteString _mstr2

;BEC fArg1 !t3
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,12
	MOV [edx],eax

;WRITE
	MOV edx,ebp
	SUB edx,12
	WriteSDecDword [edx]

;BEC fArg2 !t4
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,4
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,16
	MOV [edx],eax

;WRITE
	MOV edx,ebp
	SUB edx,16
	WriteSDecDword [edx]

;BEC fArg1 !t5
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,20
	MOV [edx],eax

;BEC fArg1 !t6
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,24
	MOV [edx],eax

;BEC fArg2 !t7
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,4
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,28
	MOV [edx],eax

;CALC  3
	MOV eax,[ebp-24]
	MOV edx,[ebp-28]
	MOV ecx,edx
	IMUL ecx
	IDIV ecx
	IDIV ecx
	MOV edx,ebp
	SUB edx,32
	MOV [edx],eax

;BEC fArg2 !t9
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,4
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,36
	MOV [edx],eax

;CALC  2
	MOV eax,[ebp-32]
	MOV edx,[ebp-36]
	IMUL edx
	MOV edx,ebp
	SUB edx,40
	MOV [edx],eax

;CALC  1
	MOV eax,[ebp-20]
	MOV edx,[ebp-40]
	SUB eax,edx
	MOV edx,ebp
	SUB edx,44
	MOV [edx],eax

;BEC !t11 fArg1
	MOV eax,[ebp-44]
	MOV edx,[ebp+8]
	ADD edx,16
	ADD edx,[edx]
	SUB edx,0
	MOV edx,[edx]
	MOV [edx],eax

;BEC fArg1 !t12
	MOV eax,[ebp+8]
	ADD eax,16
	ADD eax,[eax]
	SUB eax,0
	MOV eax,[eax]
	MOV eax,[eax]
	MOV edx,ebp
	SUB edx,48
	MOV [edx],eax

;BEC !t12 mod
	MOV eax,[ebp-48]
	MOV edx,[ebp+8]
	ADD edx,16
	ADD edx,[edx]
	ADD edx,4
	MOV [edx],eax

;END
	POP edi
	POP esi
	POP ebx
	ADD esp,48
	POP ebp
	RET
_mod ENDP

;BEGIN
_main PROC
	PUSH ebp
	MOV ebp,esp
	MOV [esp+8],ebp
	SUB esp,92
	PUSH ebx
	PUSH esi
	PUSH edi

;BEC 3 !t1
	MOV eax,3
	MOV edx,ebp
	SUB edx,72
	MOV [edx],eax

;BEC !t1 i
	MOV eax,[ebp-72]
	MOV edx,[ebp+8]
	SUB edx,60
	MOV [edx],eax

;LABEL
@label1:

;BEC 1 !t2
	MOV eax,1
	MOV edx,ebp
	SUB edx,76
	MOV [edx],eax

;CMP i !t2
	MOV eax,[ebp+8]
	MOV eax,[eax-60]
	MOV edx,[ebp-76]
	CMP eax,edx

;JWNT  >=
	JB @label8

;WRITE
	WriteString _mstr3

;READ x
	MOV edx,[ebp+8]
	SUB edx,4
	ReadSDecDword [edx]

;WRITE
	WriteString _mstr4

;READ y
	MOV edx,[ebp+8]
	SUB edx,8
	ReadSDecDword [edx]

;PUSH 
	SUB esp,4

;PUSH x
	MOV eax,[ebp+8]
	SUB eax,4
	PUSH eax

;PUSH y
	MOV eax,[ebp+8]
	SUB eax,8
	PUSH eax

;PUSH 8
	MOV eax,8
	PUSH eax

;CALL mod
	MOV eax,[ebp+8]
	PUSH eax
	SUB esp,4
	CALL _mod
	ADD esp,8
	MOV eax,[esp]
	ADD eax,4
	ADD esp,eax

;POP !t3
	POP eax
	MOV edx,ebp
	SUB edx,80
	MOV [edx],eax

;BEC !t3 x
	MOV eax,[ebp-80]
	MOV edx,[ebp+8]
	SUB edx,4
	MOV [edx],eax

;BEC x !t4
	MOV eax,[ebp+8]
	MOV eax,[eax-4]
	MOV edx,ebp
	SUB edx,84
	MOV [edx],eax

;WRITE
	WriteString _mstr5
	MOV edx,ebp
	SUB edx,84
	WriteSDecDword [edx]

;WRITE
	WriteString _mstr6

;READ g
	MOV edx,[ebp+8]
	SUB edx,12
	ReadSDecDword [edx]

;BEC g !t5
	MOV eax,[ebp+8]
	MOV eax,[eax-12]
	MOV edx,ebp
	SUB edx,88
	MOV [edx],eax

;CMP !t5 1
	MOV eax,[ebp-88]
	MOV edx,1
	CMP eax,edx

;JWNT  <>
	JE @label2

;JMP
	JMP  @label3

;LABEL
@label2:

;WRITE
	WriteString _mstr7

;JMP
	JMP  @label7

;LABEL
@label3:

;CMP !t5 2
	MOV eax,[ebp-88]
	MOV edx,2
	CMP eax,edx

;JWNT  <>
	JE @label4

;JMP
	JMP  @label5

;LABEL
@label4:

;WRITE
	WriteString _mstr8

;JMP
	JMP  @label7

;LABEL
@label5:

;CMP !t5 3
	MOV eax,[ebp-88]
	MOV edx,3
	CMP eax,edx

;JWNT  <>
	JE @label6

;CMP !t5 4
	MOV eax,[ebp-88]
	MOV edx,4
	CMP eax,edx

;JWNT  <>
	JE @label6

;JMP
	JMP  @label7

;LABEL
@label6:

;WRITE
	WriteString _mstr9

;JMP
	JMP  @label7

;LABEL
@label7:

;CALC  1
	MOV eax,[ebp+8]
	MOV eax,[eax-60]
	MOV edx,1
	SUB eax,edx
	MOV edx,ebp
	SUB edx,92
	MOV [edx],eax

;BEC !t6 i
	MOV eax,[ebp-92]
	MOV edx,[ebp+8]
	SUB edx,60
	MOV [edx],eax

;JMP
	JMP  @label1

;LABEL
@label8:

;END
	POP edi
	POP esi
	POP ebx
	ADD esp,92
	POP ebp
	RET
_main ENDP
end _main
